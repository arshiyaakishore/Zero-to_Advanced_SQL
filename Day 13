Example:
Write a SQL query to start a transaction, update the "inventory" table by reducing the quantity of a product, and commit the transaction.

BEGIN TRANSACTION;
UPDATE inventory
SET quantity = quantity - quantity_to_reduce
WHERE product_id = your_product_id;
COMMIT;


Practice Questions:
1. Write a SQL query to start a transaction, delete all records from the "orders" table, and roll back the transaction.
2. Write a SQL query to update the "balance" column of the "accounts" table by adding a specific amount for a specific account, ensuring the consistency of the transaction.
3. Write a SQL query to lock a specific row in the "employees" table to prevent other transactions from modifying it.

#1
BEGIN TRANSACTION;
DELETE FROM orders;
ROLLBACK;

#2
START TRANSACTION;
UPDATE accounts
SET balance = balance + :amount_to_add
WHERE account_id = :your_account_id;
COMMIT;

#3
-- Start the transaction
START TRANSACTION;
-- Lock a specific row in the "employees" table
SELECT *
FROM employees
WHERE employee_id = :your_employee_id
FOR UPDATE;
-- Perform your operations on the locked row if needed

--Commit
COMMIT;


