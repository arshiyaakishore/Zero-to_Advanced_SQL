Example Questions:
1. Retrieve the order details along with the customer names for all orders.
2. Find the products and their corresponding categories.
3. Get a list of customers and their total order amounts.

#1
SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate, Orders.OrderAmount FROM Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;

#2
SELECT Products.ProductID, Products.ProductName, Categories.CategoryName FROM Products INNER JOIN Categories ON Products.CategoryID = Categories.CategoryID;

#3
SELECT Customers.CustomerID, Customers.CustomerName, SUM(Orders.OrderAmount) AS TotalOrderAmount FROM Customers LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID GROUP BY Customers.CustomerID, Customers.CustomerName;


Practice Questions

1. Retrieve the order details along with the customer name and product name for each order.
Dataset: Customers (customer_id, customer_name). Orders (order_id, customer_id, order_date), Order_Items (order_id, product_id, quantity)

2. Find the products and their corresponding suppliers' names.
Dataset: Products (product_id, product_name, supplier_id), Suppliers (supplier_id, suppliere)

3. Get a list of customers who have never placed an order.
Dataset: Customers (customer_id, customer_name), Orders (order_id, customer_id)

4. Retrieve the names of customers along with the total quantity of products they ordered.
Dataset: Customers (customer_id, customer_name), Orders (order_id, customer_id), Order_Items (order_id, product_id, quantity)

5. Find the products that have been ordered by customers from a specific country.
Dataset: Products (product_id, product_name), Orders (order_id, customer_id), Customers (customer_id, country)

6. Get the total order amount for each customer, including those who have not placed any orders.
Dataset: Customers (customer_id, customer_name), Orders (order_id, customer_id, order amount)

7. Retrieve the order details for orders placed by customers with a specific occupation.
Dataset: Customers (customer_id, customer_name, occupation), Orders (order_id, customer_id, order_date), Order Items (order_id, product_id, quantity)

8. Find the customers who have placed orders for products with a price higher than the average price of all products.
Dataset: Customers (customer_id, customer_name), Orders (order_id, customer_id, order_date), Products (product_id, product_name, price), Order_Items (order_id, product_id, quantity)

9. Retrieve the names of customers along with the total number of orders they have placed.
Dataset: Customers (customer_id, customer_name). Orders (order_id, customer_id)

10. Get a list of products and the total quantity ordered for each product.
Dataset: Products (product_id, product_name), Order_Items (order_id, product_id, quantity)

